version: '3.7'
services:
  telegraf:
    image: telegraf:1.10
    configs:
      - source: telegraf.conf_v1
        target: /etc/telegraf/telegraf.conf
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/stat:/proc/stat
    networks:
      - public
      - private
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  influxdb:
    image: influxdb:1.7
    environment:
      - INFLUXDB_DB=logs; CREATE DATABASE telegraf
        #- INFLUXDB_ADMIN_USER=admin
        #- INFLUXDB_ADMIN_PASSWORD=admin
    volumes:
      - influxdb.vol:/var/lib/influxdb
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - private

  grafana:
    image: grafana/grafana
    networks:
      - public
      - private
    volumes:
      - grafana.vol:/var/lib/grafana
    deploy:
      restart_policy:
        condition: on-failure
      labels:
        - traefik.port=3000
        - traefik.backend=grafana
        - traefik.frontend.rule=Host:grafana.${DOMAIN}
        - traefik.enable=true
        - traefik.tags=public
        - traefik.docker.network=public
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        - traefik.webservice.frontend.entryPoints=https
    logging:
      driver: fluentd
      options:
        tag: docker.tig.grafana
        fluentd-async-connect: "true"

  fluentd:
    image: ruanbekker/fluentd-influxdb
    environment:
      FLUENTD_CONF: 'fluent.conf'
      FLUENTD_HOSTNAME: '{{.Node.Hostname}}'
    ports:
      - 24224:24224
      - 24224:24224/udp
    user: root
    configs:
      - source: fluent.conf_v1
        target: /fluentd/etc/fluent.conf
    networks:
      - private
    deploy:
      restart_policy:
        condition: on-failure

networks:
  public:
    external: true
  private:
    external: true

configs:
  telegraf.conf_v1:
    file: $PWD/telegraf/telegraf.conf
  fluent.conf_v1:
    file: $PWD/fluentd/fluent.conf

volumes:
  influxdb.vol: {}
  grafana.vol: {}
